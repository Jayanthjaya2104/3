#include<stdlib.h>
#include<stdio.h>
#include<string.h>
#define max_size 5
int s[max_size],top=-1,flag=0;
int i,item;
void push();
int pop();
void palindrome();
void display();
int main()
{
int choice;
printf("\n\n________STACK OPERATINS___\n");
printf("1.push\n");
printf("2.pop\n");
printf("3.palindrome\n");
printf("4.display\n");
printf("5.exit");
while(" ")
{
printf("\n enter your choice :\t");
scanf("%d",&choice);
switch(choice)
{
case 1:push();
break;
case 2:pop();
break;
case 3:palindrome();
break;
case 4:display();
break;
case 5:exit(0);
break;
default:
printf("\n invalid choice:\n");
break;
}
}
return 0;
}
void push()
{
if(top==(max_size-1))
{
printf("stack overflow\n");
return;
}
printf("enter the element to be inserted:\t");
scanf("%d",&item);
top++;
s[top]=item;
}
int pop() {
if(top==-1)
{
printf("stack underflow\n");
flag=1;
return -1;
}
printf("poped element:%d\n",s[top]);
top--;
}
void palindrome() {
if(top==-1)
{
printf("stack is empty\n");
return; }
int start=0,end=top;
int is_palindrome=1;
while(start<end) {
if(s[start]!=s[end]) {
is_palindrome=0;
break; }
start++;
end--
;
}
if(is_palindrome) {
printf("palindrome\n");
}
else {
printf("Not palindrome\n");
}}
void display() {
int i;
if(top==-1)
{
printf("\n stack is empty");
return;
}
printf("\n stack elements are:\n");
for(i=top;i>=0;i--)
{
printf("%d\n",s[i]);
}
}